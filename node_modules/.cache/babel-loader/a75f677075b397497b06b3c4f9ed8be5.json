{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandPose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model successfully loaded\"); // loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async net => {\n    // check if data is Available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // make detections\n      // grab neural network then estimate haÃŸnd within the video frame\n\n      const hand = await net.estimateHands(video);\n      console.log(hand); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  }; // runHandPose();\n  // TODO:\n  //TIMER BUTTON - ENTER STUDY LENGTH\n  // START STOP\n  // Random Amount of Motivation Tips\n  // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n  // Warning Time (user input)\n  // Play warning audio\n\n\n  let isClockRunning = false;\n  let workSessionDuration = 1500;\n  let currentTimeLeftInSession = 1500;\n  let breakSessionDuration = 300;\n  let pomodoroTimer = document.querySelector(\"#pomodoro-timer\");\n\n  const startTimer = () => {\n    toggleClock();\n  };\n\n  const pauseTimer = () => {\n    toggleClock();\n  };\n\n  const stopTimer = () => {\n    toggleClock(true);\n  };\n\n  const toggleClock = reset => {\n    if (reset) {//STOP THE TIMER\n    } else if (isClockRunning === true) {\n      // PAUSE THE Timer\n      // clearInterval(clockTimer);\n      isClockRunning = false;\n    } else {\n      //START THE Timer\n      isClockRunning = true;\n      const clockTimer = setInterval(() => {\n        // decrease time left / increase time spent\n        currentTimeLeftInSession--;\n        displayCurrentTimeLeftInSession();\n      }, 1000);\n    }\n  };\n\n  const displayCurrentTimeLeftInSession = () => {\n    const secondsLeft = currentTimeLeftInSession;\n    let result = \"\";\n    const seconds = secondsLeft % 60;\n    const minutes = parseInt(secondsLeft / 60) % 60;\n    let hours = parseInt(secondsLeft / 3600); // add leading zeroes if its less than 10\n\n    window.onload = function (time) {\n      function addLeadingZeroes(time) {\n        return time < 10 ? `0${time}` : time;\n      }\n\n      if (hours > 0) result += `{hours}:`;\n      result += `${addLeadingZeroes(minutes)}:{addLeadingZeroes(seconds)}`;\n      pomodoroTimer.innerText = result.toString();\n      pomodoroTimer.innerText = result;\n    };\n  };\n\n  let timer = \"poop\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WOW THIS IS TOXIC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pomodoro-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pomodoro-clock\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"pomodoro-timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"pomodoro-clock-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pomodoro-start\",\n            onClick: startTimer,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pomodoro-pause\",\n            onClick: pauseTimer,\n            children: \"Pause\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"pomodoro-stop\",\n            onClick: stopTimer,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js"],"names":["React","useRef","tf","handpose","Webcam","drawHand","App","webcamRef","canvasRef","runHandPose","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","ctx","getContext","isClockRunning","workSessionDuration","currentTimeLeftInSession","breakSessionDuration","pomodoroTimer","document","querySelector","startTimer","toggleClock","pauseTimer","stopTimer","reset","clockTimer","displayCurrentTimeLeftInSession","secondsLeft","result","seconds","minutes","parseInt","hours","window","onload","time","addLeadingZeroes","innerText","toString","timer","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import \"./App.css\";\n\nimport React, { useRef } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandPose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model successfully loaded\");\n\n    // loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async (net) => {\n    // check if data is Available\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // make detections\n      // grab neural network then estimate haÃŸnd within the video frame\n      const hand = await net.estimateHands(video);\n      console.log(hand);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  // runHandPose();\n\n  // TODO:\n  //TIMER BUTTON - ENTER STUDY LENGTH\n  // START STOP\n  // Random Amount of Motivation Tips\n\n  // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n  // Warning Time (user input)\n  // Play warning audio\n\n  let isClockRunning = false;\n\n  let workSessionDuration = 1500;\n  let currentTimeLeftInSession = 1500;\n  let breakSessionDuration = 300;\n  let pomodoroTimer = document.querySelector(\"#pomodoro-timer\");\n\n  const startTimer = () => {\n    toggleClock();\n  };\n\n  const pauseTimer = () => {\n    toggleClock();\n  };\n\n  const stopTimer = () => {\n    toggleClock(true);\n  };\n\n  const toggleClock = (reset) => {\n    if (reset) {\n      //STOP THE TIMER\n    } else if (isClockRunning === true) {\n      // PAUSE THE Timer\n      // clearInterval(clockTimer);\n      isClockRunning = false;\n    } else {\n      //START THE Timer\n      isClockRunning = true;\n\n      const clockTimer = setInterval(() => {\n        // decrease time left / increase time spent\n        currentTimeLeftInSession--;\n        displayCurrentTimeLeftInSession();\n      }, 1000);\n    }\n  };\n  const displayCurrentTimeLeftInSession = () => {\n    const secondsLeft = currentTimeLeftInSession;\n    let result = \"\";\n    const seconds = secondsLeft % 60;\n    const minutes = parseInt(secondsLeft / 60) % 60;\n    let hours = parseInt(secondsLeft / 3600);\n    // add leading zeroes if its less than 10\n\n    window.onload = function (time) {\n      function addLeadingZeroes(time) {\n        return time < 10 ? `0${time}` : time;\n      }\n      if (hours > 0) result += `{hours}:`;\n      result += `${addLeadingZeroes(minutes)}:{addLeadingZeroes(seconds)}`;\n      pomodoroTimer.innerText = result.toString();\n      pomodoroTimer.innerText = result;\n\n    };\n  };\n\n  let timer = \"poop\";\n  return (\n    <div className=\"App\">\n      <h1>WOW THIS IS TOXIC</h1>\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    \n\n      <div id = \"pomodoro-container\">\n        <div id = \"pomodoro-clock\">\n          <div id = \"pomodoro-timer\"></div>\n          <div id = \"pomodoro-clock-actions\">\n            <button id = \"pomodoro-start\" onClick={startTimer}>Start</button>\n            <button id = \"pomodoro-pause\" onClick={pauseTimer}>Pause</button>\n            <button  id = \"pomodoro-stop\" onClick={stopTimer}>Stop</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}