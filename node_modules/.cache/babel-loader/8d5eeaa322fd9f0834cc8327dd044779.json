{"ast":null,"code":"const fingerJoints = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20]\n};\nexport const drawHand = (predictions, ctx) => {\n  // check if we have predictions\n  if (predictions.length > 0) {\n    //loop through each prediction\n    predictions.forEach(prediction => {\n      // grab landmarks\n      const landmarks = prediction.landmarks; // loop through landmarks and draw theme_color\n\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n        let finger = Object.keys(fingerJoints)[j]; //loop through pairs of fingerJoints\n\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n          const firstJointIndex = fingerJoints[finger][k];\n          const secondJointInex = fingerJoints[finger][k + 1]; // draw path\n\n          ctx.beginPath();\n          ctx.moveTo(landmarks[firstJointIndex][0], landmarks[firstJointIndex][1]);\n          ctx.lineTo(landmarks[secondJointInex][0], landmarks[secondJointInex][1]);\n          ctx.strokeStyle = \"plum\";\n          ctx.lineWidth = 4;\n          ctx.stroke();\n        }\n      }\n\n      for (let i = 0; i < landmarks.length; i++) {\n        //get x point\n        const x = landmarks[i][0]; // get y point\n\n        const y = landmarks[i][1]; //get z ?\n        // start drawing\n        //HTML CANVAS \n\n        ctx.beginPath();\n        ctx.arc(x, y, 5, 0, 3 * Math.PI); // set line color\n\n        ctx.fillStyle = \"indigo\";\n        ctx.fill();\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/larrysimiyu/Desktop/codeProjects/handTracking/src/utilities.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointInex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CADU;AAEjBC,EAAAA,WAAW,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAFI;AAGjBC,EAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,EAAW,EAAX,CAHG;AAIjBC,EAAAA,UAAU,EAAC,CAAC,CAAD,EAAG,EAAH,EAAM,EAAN,EAAS,EAAT,EAAY,EAAZ,CAJM;AAKjBC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,EAAH,EAAM,EAAN,EAAS,EAAT,EAAY,EAAZ;AALU,CAArB;AAQA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAD,EAAcC,GAAd,KAAsB;AAC1C;AAEA,MAAGD,WAAW,CAACE,MAAZ,GAAoB,CAAvB,EAA0B;AACtB;AACAF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,UAAU,IAAI;AAC9B;AACA,YAAMC,SAAS,GAAGD,UAAU,CAACC,SAA7B,CAF8B,CAI9B;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYf,YAAZ,EAA0BS,MAA7C,EAAqDI,CAAC,EAAtD,EAA0D;AACtD,YAAIG,MAAM,GAAGF,MAAM,CAACC,IAAP,CAAYf,YAAZ,EAA0Ba,CAA1B,CAAb,CADsD,CAEtD;;AACA,aAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEjB,YAAY,CAACgB,MAAD,CAAZ,CAAqBP,MAArB,GAA6B,CAA7C,EAAgDQ,CAAC,EAAjD,EAAqD;AACjD,gBAAMC,eAAe,GAAGlB,YAAY,CAACgB,MAAD,CAAZ,CAAqBC,CAArB,CAAxB;AACA,gBAAME,eAAe,GAAGnB,YAAY,CAACgB,MAAD,CAAZ,CAAqBC,CAAC,GAAG,CAAzB,CAAxB,CAFiD,CAIjD;;AACAT,UAAAA,GAAG,CAACY,SAAJ;AACAZ,UAAAA,GAAG,CAACa,MAAJ,CACIT,SAAS,CAACM,eAAD,CAAT,CAA2B,CAA3B,CADJ,EAEIN,SAAS,CAACM,eAAD,CAAT,CAA2B,CAA3B,CAFJ;AAKAV,UAAAA,GAAG,CAACc,MAAJ,CACIV,SAAS,CAACO,eAAD,CAAT,CAA2B,CAA3B,CADJ,EAEIP,SAAS,CAACO,eAAD,CAAT,CAA2B,CAA3B,CAFJ;AAKAX,UAAAA,GAAG,CAACe,WAAJ,GAAkB,MAAlB;AACAf,UAAAA,GAAG,CAACgB,SAAJ,GAAgB,CAAhB;AACAhB,UAAAA,GAAG,CAACiB,MAAJ;AAEH;AACJ;;AAED,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,SAAS,CAACH,MAA7B,EAAqCiB,CAAC,EAAtC,EAA0C;AACtC;AACA,cAAMC,CAAC,GAAGf,SAAS,CAACc,CAAD,CAAT,CAAa,CAAb,CAAV,CAFsC,CAGtC;;AACA,cAAME,CAAC,GAAGhB,SAAS,CAACc,CAAD,CAAT,CAAa,CAAb,CAAV,CAJsC,CAMtC;AAEA;AAEA;;AACAlB,QAAAA,GAAG,CAACY,SAAJ;AACAZ,QAAAA,GAAG,CAACqB,GAAJ,CAAQF,CAAR,EAAWC,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,IAAEE,IAAI,CAACC,EAA3B,EAZsC,CAetC;;AAEAvB,QAAAA,GAAG,CAACwB,SAAJ,GAAe,QAAf;AACAxB,QAAAA,GAAG,CAACyB,IAAJ;AACH;AACJ,KAnDD;AAoDH;AACJ,CA1DM","sourcesContent":["const fingerJoints = {\n    thumb: [0,1,2,3,4],\n    indexFinger: [0,5,6,7,8],\n    middleFinger: [0,9,10,11,12],\n    ringFinger:[0,13,14,15,16],\n    pinky: [0,17,18,19,20]\n}\n\nexport const drawHand = (predictions, ctx) => {\n    // check if we have predictions\n\n    if(predictions.length >0) {\n        //loop through each prediction\n        predictions.forEach(prediction => {\n            // grab landmarks\n            const landmarks = prediction.landmarks\n\n            // loop through landmarks and draw theme_color\n            for(let j = 0; j < Object.keys(fingerJoints).length; j++) {\n                let finger = Object.keys(fingerJoints)[j]\n                //loop through pairs of fingerJoints\n                for(let k=0; k <fingerJoints[finger].length -1; k++) {\n                    const firstJointIndex = fingerJoints[finger][k];\n                    const secondJointInex = fingerJoints[finger][k + 1];\n                \n                    // draw path\n                    ctx.beginPath();\n                    ctx.moveTo(\n                        landmarks[firstJointIndex][0],\n                        landmarks[firstJointIndex][1]\n                    )\n\n                    ctx.lineTo(\n                        landmarks[secondJointInex][0],\n                        landmarks[secondJointInex][1]\n                    );\n\n                    ctx.strokeStyle = \"plum\";\n                    ctx.lineWidth = 4;\n                    ctx.stroke()\n\n                }\n            }\n\n            for(let i = 0; i < landmarks.length; i++) {\n                //get x point\n                const x = landmarks[i][0]\n                // get y point\n                const y = landmarks[i][1]\n\n                //get z ?\n\n                // start drawing\n\n                //HTML CANVAS \n                ctx.beginPath();\n                ctx.arc(x, y, 5, 0, 3*Math.PI)\n\n\n                // set line color\n\n                ctx.fillStyle =\"indigo\"\n                ctx.fill()\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}