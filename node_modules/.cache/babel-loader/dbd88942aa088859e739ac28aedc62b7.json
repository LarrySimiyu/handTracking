{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js\";\nimport \"./App.css\";\nimport React, { useRef } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\nimport Timer from \"./Timer\";\nimport Sound from \"./Sound\";\nconst webcamRef = useRef(null);\nconst canvasRef = useRef(null);\n\nconst runHandPose = async () => {\n  const net = await handpose.load();\n  console.log(\"Handpose model successfully loaded\"); // loop and detect hands\n\n  setInterval(() => {\n    detect(net);\n  }, 100);\n};\n\nconst detect = async net => {\n  // check if data is Available\n  if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n    // Get Video Properties\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight; // make detections\n    // grab neural network then estimate haßnd within the video frame\n\n    const hand = await net.estimateHands(video);\n    console.log(hand); // Draw mesh\n\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawHand(hand, ctx);\n  }\n}; // runHandPose();\n// TODO:\n//TIMER BUTTON - ENTER STUDY LENGTH\n// START STOP\n// Random Amount of Motivation Tips\n// Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n// Warning Time (user input)\n// Play warning audio\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cycle: \"Session\",\n      workTime: 25,\n      breaktime: 5,\n      sound: \"on\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WOW THIS IS TOXIC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webcamRef,\n          style: {\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pomodo Clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Sound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function App() {\n//   const webcamRef = useRef(null);\n//   const canvasRef = useRef(null);\n//   const runHandPose = async () => {\n//     const net = await handpose.load();\n//     console.log(\"Handpose model successfully loaded\");\n//     // loop and detect hands\n//     setInterval(() => {\n//       detect(net);\n//     }, 100);\n//   };\n//   const detect = async (net) => {\n//     // check if data is Available\n//     if (\n//       typeof webcamRef.current !== \"undefined\" &&\n//       webcamRef.current !== null &&\n//       webcamRef.current.video.readyState === 4\n//     ) {\n//       // Get Video Properties\n//       const video = webcamRef.current.video;\n//       const videoWidth = webcamRef.current.video.videoWidth;\n//       const videoHeight = webcamRef.current.video.videoHeight;\n//       // Set video width\n//       webcamRef.current.video.width = videoWidth;\n//       webcamRef.current.video.height = videoHeight;\n//       // Set canvas height and width\n//       canvasRef.current.width = videoWidth;\n//       canvasRef.current.height = videoHeight;\n//       // make detections\n//       // grab neural network then estimate haßnd within the video frame\n//       const hand = await net.estimateHands(video);\n//       console.log(hand);\n//       // Draw mesh\n//       const ctx = canvasRef.current.getContext(\"2d\");\n//       drawHand(hand, ctx);\n//     }\n//   };\n//   // runHandPose();\n//   // TODO:\n//   //TIMER BUTTON - ENTER STUDY LENGTH\n//   // START STOP\n//   // Random Amount of Motivation Tips\n//   // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n//   // Warning Time (user input)\n//   // Play warning audio\n//   return (\n//     <div className=\"App\">\n//       <h1>WOW THIS IS TOXIC</h1>\n//       <header className=\"App-header\">\n//         <Webcam\n//           ref={webcamRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//         <canvas\n//           ref={canvasRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//       </header>\n//       <div className=\"main\">\n//         <h1>Pomodo Clock</h1>\n//         <Timer />\n//         <Sound />\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js"],"names":["React","useRef","tf","handpose","Webcam","drawHand","Timer","Sound","webcamRef","canvasRef","runHandPose","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","ctx","getContext","App","Component","constructor","state","cycle","workTime","breaktime","sound","render","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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AAAA,MAAM,EAAE,CAPH;AAQLrB,YAAAA,KAAK,EAAE,GARF;AASLC,YAAAA,MAAM,EAAE;AATH;AAFT;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAkCA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD;;AArDwC,C,CAwD3C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import \"./App.css\";\n\nimport React, { useRef } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\nimport Timer from \"./Timer\";\nimport Sound from \"./Sound\";\n\n\nconst webcamRef = useRef(null);\nconst canvasRef = useRef(null);\n\nconst runHandPose = async () => {\n  const net = await handpose.load();\n  console.log(\"Handpose model successfully loaded\");\n\n  // loop and detect hands\n  setInterval(() => {\n    detect(net);\n  }, 100);\n};\n\nconst detect = async (net) => {\n  // check if data is Available\n\n  if (\n    typeof webcamRef.current !== \"undefined\" &&\n    webcamRef.current !== null &&\n    webcamRef.current.video.readyState === 4\n  ) {\n    // Get Video Properties\n    const video = webcamRef.current.video;\n    const videoWidth = webcamRef.current.video.videoWidth;\n    const videoHeight = webcamRef.current.video.videoHeight;\n\n    // Set video width\n    webcamRef.current.video.width = videoWidth;\n    webcamRef.current.video.height = videoHeight;\n\n    // Set canvas height and width\n    canvasRef.current.width = videoWidth;\n    canvasRef.current.height = videoHeight;\n\n    // make detections\n    // grab neural network then estimate haßnd within the video frame\n    const hand = await net.estimateHands(video);\n    console.log(hand);\n\n    // Draw mesh\n    const ctx = canvasRef.current.getContext(\"2d\");\n    drawHand(hand, ctx);\n  }\n};\n\n// runHandPose();\n\n// TODO:\n//TIMER BUTTON - ENTER STUDY LENGTH\n// START STOP\n// Random Amount of Motivation Tips\n\n// Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n// Warning Time (user input)\n// Play warning audio\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cycle: \"Session\",\n      workTime: 25,\n      breaktime: 5,\n      sound:\"on\",\n    }\n  }\n  render(){\n    return(\n      <div className=\"App\">\n      <h1>WOW THIS IS TOXIC</h1>\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n\n      <div className=\"main\">\n        <h1>Pomodo Clock</h1>\n        <Timer />\n        <Sound />\n      </div>\n    </div>\n    )\n  }\n}\n\n// function App() {\n//   const webcamRef = useRef(null);\n//   const canvasRef = useRef(null);\n\n//   const runHandPose = async () => {\n//     const net = await handpose.load();\n//     console.log(\"Handpose model successfully loaded\");\n\n//     // loop and detect hands\n//     setInterval(() => {\n//       detect(net);\n//     }, 100);\n//   };\n\n//   const detect = async (net) => {\n//     // check if data is Available\n\n//     if (\n//       typeof webcamRef.current !== \"undefined\" &&\n//       webcamRef.current !== null &&\n//       webcamRef.current.video.readyState === 4\n//     ) {\n//       // Get Video Properties\n//       const video = webcamRef.current.video;\n//       const videoWidth = webcamRef.current.video.videoWidth;\n//       const videoHeight = webcamRef.current.video.videoHeight;\n\n//       // Set video width\n//       webcamRef.current.video.width = videoWidth;\n//       webcamRef.current.video.height = videoHeight;\n\n//       // Set canvas height and width\n//       canvasRef.current.width = videoWidth;\n//       canvasRef.current.height = videoHeight;\n\n//       // make detections\n//       // grab neural network then estimate haßnd within the video frame\n//       const hand = await net.estimateHands(video);\n//       console.log(hand);\n\n//       // Draw mesh\n//       const ctx = canvasRef.current.getContext(\"2d\");\n//       drawHand(hand, ctx);\n//     }\n//   };\n\n//   // runHandPose();\n\n//   // TODO:\n//   //TIMER BUTTON - ENTER STUDY LENGTH\n//   // START STOP\n//   // Random Amount of Motivation Tips\n\n//   // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n//   // Warning Time (user input)\n//   // Play warning audio\n\n//   return (\n//     <div className=\"App\">\n//       <h1>WOW THIS IS TOXIC</h1>\n//       <header className=\"App-header\">\n//         <Webcam\n//           ref={webcamRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n\n//         <canvas\n//           ref={canvasRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//       </header>\n\n//       <div className=\"main\">\n//         <h1>Pomodo Clock</h1>\n//         <Timer />\n//         <Sound />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}