{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js\";\nimport \"./App.css\";\nimport React, { useRef, Component } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\nimport Timer from \"./Timer\";\nimport Sound from \"./Sound\";\nimport TimerControllers from \"./TimerController\";\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.setSound = sound => {\n      this.setState({\n        sound: sound\n      });\n    };\n\n    this.incrementTime = () => {\n      this.setState({\n        workTime: this.state.workTime + 1\n      });\n    };\n\n    this.decrementTime = () => {\n      this.setState({\n        workTime: this.state.workTime - 1\n      });\n    };\n\n    this.incrementBreakTime = () => {\n      this.setState({\n        breakTime: this.state.breakTime + 1\n      });\n    };\n\n    this.decrementTime = () => {\n      this.setState({\n        breaktime: this.state.breakTime - 1\n      });\n    };\n\n    this.state = {\n      cycle: \"Session\",\n      workTime: 25,\n      breakTime: 5,\n      sound: \"on\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"POMODORO CLOCK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerControllers, {\n        workTime: this.state.workTime,\n        breakTime: this.state.breakTime,\n        incrementTime: this.state.incrementTime,\n        decrementTime: this.state.decrementTime,\n        incrementBreakTime: this.state.incrementBreakTime,\n        decrementBreakTime: this.state.decrementBreakTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sound, {\n        setSound: this.setSound,\n        sound: this.state.sound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n} // function App() {\n//   const webcamRef = useRef(null);\n//   const canvasRef = useRef(null);\n//   const runHandPose = async () => {\n//     const net = await handpose.load();\n//     console.log(\"Handpose model successfully loaded\");\n//     // loop and detect hands\n//     setInterval(() => {\n//       detect(net);\n//     }, 100);\n//   };\n//   const detect = async (net) => {\n//     // check if data is Available\n//     if (\n//       typeof webcamRef.current !== \"undefined\" &&\n//       webcamRef.current !== null &&\n//       webcamRef.current.video.readyState === 4\n//     ) {\n//       // Get Video Properties\n//       const video = webcamRef.current.video;\n//       const videoWidth = webcamRef.current.video.videoWidth;\n//       const videoHeight = webcamRef.current.video.videoHeight;\n//       // Set video width\n//       webcamRef.current.video.width = videoWidth;\n//       webcamRef.current.video.height = videoHeight;\n//       // Set canvas height and width\n//       canvasRef.current.width = videoWidth;\n//       canvasRef.current.height = videoHeight;\n//       // make detections\n//       // grab neural network then estimate ha√ünd within the video frame\n//       const hand = await net.estimateHands(video);\n//       console.log(hand);\n//       // Draw mesh\n//       const ctx = canvasRef.current.getContext(\"2d\");\n//       drawHand(hand, ctx);\n//     }\n//   };\n//   runHandPose();\n//   // TODO:\n//   //TIMER BUTTON - ENTER STUDY LENGTH\n//   // START STOP\n//   // Random Amount of Motivation Tips\n//   // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n//   // Warning Time (user input)\n//   // Play warning audio\n//   return (\n//     <div className=\"App\">\n//       <h1>WOW THIS IS TOXIC</h1>\n//       <header className=\"App-header\">\n//         <Webcam\n//           ref={webcamRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//         <canvas\n//           ref={canvasRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//       </header>\n//       <div className=\"main\">\n//         <h1>Pomodo Clock</h1>\n//         <Timer />\n//         <Sound />\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["/Users/larrysimiyu/Desktop/codeProjects/handTracking/handy-tool/src/App.js"],"names":["React","useRef","Component","tf","handpose","Webcam","drawHand","Timer","Sound","TimerControllers","App","constructor","setSound","sound","setState","incrementTime","workTime","state","decrementTime","incrementBreakTime","breakTime","breaktime","cycle","render","decrementBreakTime"],"mappings":";;AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,OAAO,KAAKC,EAAZ,MAAoB,kBAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AAEA,eAAe,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACzCS,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,QAXc,GAWFC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGD,KAfa;;AAAA,SAiBdE,aAjBc,GAiBE,MAAM;AACpB,WAAKD,QAAL,CAAc;AACZE,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAX,GAAsB;AADpB,OAAd;AAGD,KArBa;;AAAA,SAuBdE,aAvBc,GAuBE,MAAM;AACpB,WAAKJ,QAAL,CAAc;AACZE,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QAAX,GAAsB;AADpB,OAAd;AAGD,KA3Ba;;AAAA,SA6BdG,kBA7Bc,GA6BO,MAAM;AACzB,WAAKL,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB;AADtB,OAAd;AAGD,KAjCa;;AAAA,SAmCdF,aAnCc,GAmCE,MAAM;AACpB,WAAKJ,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,SAAX,GAAuB;AADtB,OAAd;AAGD,KAvCa;;AAEZ,SAAKH,KAAL,GAAa;AACXK,MAAAA,KAAK,EAAE,SADI;AAEXN,MAAAA,QAAQ,EAAE,EAFC;AAGXI,MAAAA,SAAS,EAAE,CAHA;AAIXP,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAiCDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,gBAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWD,QADvB;AAEE,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWG,SAFxB;AAGE,QAAA,aAAa,EAAE,KAAKH,KAAL,CAAWF,aAH5B;AAIE,QAAA,aAAa,EAAE,KAAKE,KAAL,CAAWC,aAJ5B;AAKE,QAAA,kBAAkB,EAAE,KAAKD,KAAL,CAAWE,kBALjC;AAME,QAAA,kBAAkB,EAAE,KAAKF,KAAL,CAAWO;AANjC;AAAA;AAAA;AAAA;AAAA,cAHF,eAWE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKZ,QAAtB;AAAgC,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWJ;AAAlD;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA1DwC,C,CA6D3C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import \"./App.css\";\n\nimport React, { useRef, Component } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport { drawHand } from \"./utilities\";\n\nimport Timer from \"./Timer\";\nimport Sound from \"./Sound\";\nimport TimerControllers from \"./TimerController\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cycle: \"Session\",\n      workTime: 25,\n      breakTime: 5,\n      sound: \"on\",\n    };\n  }\n\n\n  setSound = (sound) => {\n    this.setState({\n      sound: sound\n    })\n  }\n\n  incrementTime = () => {\n    this.setState({\n      workTime: this.state.workTime + 1\n    })\n  }\n\n  decrementTime = () => {\n    this.setState({\n      workTime: this.state.workTime - 1\n    })\n  }\n\n  incrementBreakTime = () => {\n    this.setState({\n      breakTime: this.state.breakTime + 1\n    })\n  }\n\n  decrementTime = () => {\n    this.setState({\n      breaktime: this.state.breakTime - 1\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>POMODORO CLOCK</h1>\n        <Timer />\n        <TimerControllers \n          workTime={this.state.workTime}\n          breakTime={this.state.breakTime}\n          incrementTime={this.state.incrementTime}\n          decrementTime={this.state.decrementTime}\n          incrementBreakTime={this.state.incrementBreakTime}\n          decrementBreakTime={this.state.decrementBreakTime}\n        />\n        <Sound setSound={this.setSound} sound={this.state.sound} />\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   const webcamRef = useRef(null);\n//   const canvasRef = useRef(null);\n\n//   const runHandPose = async () => {\n//     const net = await handpose.load();\n//     console.log(\"Handpose model successfully loaded\");\n\n//     // loop and detect hands\n//     setInterval(() => {\n//       detect(net);\n//     }, 100);\n//   };\n\n//   const detect = async (net) => {\n//     // check if data is Available\n\n//     if (\n//       typeof webcamRef.current !== \"undefined\" &&\n//       webcamRef.current !== null &&\n//       webcamRef.current.video.readyState === 4\n//     ) {\n//       // Get Video Properties\n//       const video = webcamRef.current.video;\n//       const videoWidth = webcamRef.current.video.videoWidth;\n//       const videoHeight = webcamRef.current.video.videoHeight;\n\n//       // Set video width\n//       webcamRef.current.video.width = videoWidth;\n//       webcamRef.current.video.height = videoHeight;\n\n//       // Set canvas height and width\n//       canvasRef.current.width = videoWidth;\n//       canvasRef.current.height = videoHeight;\n\n//       // make detections\n//       // grab neural network then estimate ha√ünd within the video frame\n//       const hand = await net.estimateHands(video);\n//       console.log(hand);\n\n//       // Draw mesh\n//       const ctx = canvasRef.current.getContext(\"2d\");\n//       drawHand(hand, ctx);\n//     }\n//   };\n\n//   runHandPose();\n\n//   // TODO:\n//   //TIMER BUTTON - ENTER STUDY LENGTH\n//   // START STOP\n//   // Random Amount of Motivation Tips\n\n//   // Hand Detection Timer - Triggered By Hand - Seconds to Minutes\n//   // Warning Time (user input)\n//   // Play warning audio\n\n//   return (\n//     <div className=\"App\">\n//       <h1>WOW THIS IS TOXIC</h1>\n//       <header className=\"App-header\">\n//         <Webcam\n//           ref={webcamRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n\n//         <canvas\n//           ref={canvasRef}\n//           style={{\n//             position: \"absolute\",\n//             marginLeft: \"auto\",\n//             marginRight: \"auto\",\n//             left: 0,\n//             right: 0,\n//             textAlign: \"center\",\n//             zindex: 9,\n//             width: 640,\n//             height: 480,\n//           }}\n//         />\n//       </header>\n\n//       <div className=\"main\">\n//         <h1>Pomodo Clock</h1>\n//         <Timer />\n//         <Sound />\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}